addIntAndInt
from employees | eval s = emp_no + languages | project emp_no, s | sort emp_no asc | limit 2;

emp_no:integer | s:integer
         10001 |     10003
         10002 |     10007
;

addLongAndLong
from employees | eval s = avg_worked_seconds + languages.long | project emp_no, s | sort emp_no asc | limit 2;

emp_no:integer | s:long
         10001 | 268728051
         10002 | 328922892
;

addDoubleAndDouble
from employees | eval s = height + 5 | project emp_no, s | sort emp_no asc | limit 2;

emp_no:integer | s:double
         10001 | 7.029999999999999
         10002 | 7.08
;

addIntAndLong
from employees | eval s = emp_no + languages.long | project emp_no, s | sort emp_no asc | limit 2;

emp_no:integer | s:long
         10001 |  10003
         10002 |  10007
;

addLongAndInt
from employees | eval s = languages.long + emp_no | project emp_no, s | sort emp_no asc | limit 2;

emp_no:integer | s:long
         10001 |  10003
         10002 |  10007
;

addIntAndDouble
from employees | eval s = emp_no + height | project emp_no, s | sort emp_no asc | limit 2;

emp_no:integer | s:double
         10001 | 10003.03
         10002 | 10004.08
;

addDoubleAndInt
from employees | eval s = height + emp_no | project emp_no, s | sort emp_no asc | limit 2;

emp_no:integer | s:double
         10001 | 10003.03
         10002 | 10004.08
;

addLongAndDouble
from employees | eval s = languages.long + height | project emp_no, s | sort emp_no asc | limit 2;

emp_no:integer | s:double
         10001 | 4.029999999999999
         10002 | 7.08
;

addDoubleAndLong
from employees | eval s = height + languages.long | project emp_no, s | sort emp_no asc | limit 2;

emp_no:integer | s:double
         10001 | 4.029999999999999
         10002 | 7.08
;

absLong
from employees | eval l = abs(0-languages.long) | project l | sort l asc | limit 3;

l:long
1
1
1
;

absInt
from employees | eval s = abs(0-salary) | project s | sort s asc | limit 3;

s:integer
25324
25945
25976
;

absDouble
from employees | eval s = abs(0.0-salary) | project s | sort s asc | limit 3;

s:double
25324.0
25945.0
25976.0
;

powHeightSquared
from employees | sort height asc | limit 20 | eval s = round(pow(height, 2),2) | project s | sort s desc | limit 4;

s:double
2.40
2.37
2.34
2.34
;

isFiniteFalse
row d = 1.0 | eval s = is_finite(d/0);

d:double | s:boolean
1.0      | false
;

isFiniteTrue
row d = 1.0 | eval s = is_finite(d);

d:double | s:boolean
1.0      | true
;

isInfiniteFalse
row d = 1.0 | eval s = is_infinite(d);

d:double | s:boolean
1.0      | false
;

isInfiniteTrue
row d = 1.0/0 | eval s = is_infinite(d);

d:double | s:boolean
Infinity | true
;

isNaN
row d = 1.0 | eval s = is_nan(d);

d:double | s:boolean
1.0      | false
;

powDoubleDouble
row base = 2.0, exponent = 2.0 | eval s = pow(base, exponent);

base:double | exponent:double | s:double
2.0         | 2.0             | 4.0
;

powDoubleInt
row base = 2.0, exponent = 2 | eval s = pow(base, exponent);

base:double | exponent:integer | s:double
2.0         | 2                | 4.0
;

powIntInt
row base = 2, exponent = 2 | eval s = pow(base, exponent);

base:integer | exponent:integer | s:integer
2            | 2                | 4
;

powIntIntPlusInt
row base = 2, exponent = 2 | eval s = 1 + pow(base, exponent);

base:integer | exponent:integer | s:integer
2            | 2                | 5
;

powIntIntPlusDouble
row base = 2, exponent = 2 | eval s = 1.0 + pow(base, exponent);

base:integer | exponent:integer | s:double
2            | 2                | 5.0
;

mvMax
from employees | where emp_no > 10008 | eval salary_change = mv_max(salary_change.int) | sort emp_no | project emp_no, salary_change.int, salary_change | limit 7;

# TODO sort only keeps the first value in a multivalue field
emp_no:integer | salary_change.int:integer | salary_change:integer
10009          | null                      | null
10010          | -6                        | 12
10011          | -7                        | 10
10012          | 0                         | 0
10013          | null                      | null
10014          | -1                        | 9
10015          | 12                        | 14
;

mvMin
from employees | where emp_no > 10008 | eval salary_change = mv_min(salary_change.int) | sort emp_no | project emp_no, salary_change.int, salary_change | limit 7;

# TODO sort only keeps the first value in a multivalue field
emp_no:integer | salary_change.int:integer | salary_change:integer
10009          | null                      | null
10010          | -6                        | -6
10011          | -7                        | -7
10012          | 0                         | 0
10013          | null                      | null
10014          | -1                        | -1
10015          | 12                        | 12
;
